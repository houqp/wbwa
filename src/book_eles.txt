写书常用的元素
==============

脚注
-----

AsciiDoc为脚注提供了三种相关的语法：

.脚注代码
============================
............................
只给定脚注内容footnote:[脚注示例1]。

给定脚注内容和脚注IDfootnoteref:[ft_ex, 含ID的脚注示例]。

对给定ID的脚注的引用footnoteref:[ft_ex]。
............................

============================

.脚注效果
============================

只给定脚注内容footnote:[脚注示例1]。

给定脚注内容和脚注IDfootnoteref:[ft_ex, 含ID的脚注示例]。

对给定ID的脚注的引用footnoteref:[ft_ex]。

============================


索引
----

AsciiDoc有两种生成索引的方式：

.索引代码
============================

............................

indexterm:[隐式一级索引（1）, 隐式二级索引（1）, 隐式三级索引（1）]
隐式索引在原文中不会显式。
(((隐式一级索引（2）, 隐式二级索引（2）, 隐式三级索引（2）)))
indexterm:[隐式一级索引（3）] <1>

((显式索引（2）)) <2>

............................

============================

<1> 二级索引和三级索引都是可以省略的。
<2> 显式索引的内容会同时出现在原文中，而隐式则不会。


.索引效果
============================

indexterm:[隐式一级索引（1）, 隐式二级索引（1）, 隐式三级索引（1）]
隐式索引在原文中不会显式。
(((隐式一级索引（2）, 隐式二级索引（2）, 隐式三级索引（2）)))
indexterm:[隐式一级索引（3）]

((显式索引（1）))

============================


索引条目效果请参考本文档的“<<index>>”。


内部引用
--------

写书时常常需要引用书本其他部分的文字，使用AsciiDoc的内部引用就能很方便的管理这些引用，只要改一个地方，所有引用都会跟着变动，不需要人工干预。

内部引用的对象是id，你可以在文档的任何部位创建引用id，然后在任何部位对这些id进行引用。创建标记使用“[[]]”，引用则使用“<<>>”。

.引用代码
============================

............................

[[ref_exp, 自定义标记标签]] <1>

<<ref_exp>> <2>

<<ref_exp, 自定义引用标题>> <3>

............................

<1> ref_exp就是id，后面的自定义标记标签可以省略，AsciiDoc会自动根据当前的位置生成标签。
<2> 引用时可以只给出id，这样AsciiDoc会自动当前位置显示自定义或系统生成的标签。
<3> 也可以在引用的时候指定要显示的内容。

============================


.引用效果
============================

[[ref_exp, 自定义标记标签]]

<<ref_exp>>

<<ref_exp, 自定义引用标题>>

============================


引用也有第二种表示方式，例如：

............................
anchor:ref_exp[自定义标记标签]

xref:ref_exp[自定义引用标题]
............................



附录，索引与参考目录的撰写
--------------------------

在<<chaper>>中我们提到过，AsciiDoc以章节（更准确的说是section）来对书本进行划分。但是我们平时写书的时候还会涉及到特殊的章节，例如附录，索引表，参考目录等等。这些部分应该是与章节（或者说section）是同级关系。为了能够方便的编写这一类特殊的章节，AsciiDoc引入了“((section标记模板))”这个概念。

你可以把section标记模板理解为一个特殊的章节（section），你给定一个模板的名字，然后这个章节里面的内容就会根据对应的模板来进行渲染。

AsciiDoc目前支持的模板有：

- abstract
- preface
- colopho
- dedicatio
- glossar
- bibliograph
- synopsi
- appendi
- index

使用模板，你能够很方便的创建一个附录：

.附录代码
============================
............................
[appendix]
附录示例
========

附录里面也是可以定义子附录的。

附录子目录
----------

当然你还可以继续深入下去。
............................
============================


效果可以参考本文档的附录。

定义参考目录也可以使用类似的方法：

.参考目录代码
============================
............................
[bibliography]
参考文献目录
============

参考文献目录可以分多个区域：

[bibliography] <1>
.书籍 <1>
- [[[taoup]]] Eric Steven Raymond. 'The Art of Unix <2>
  Programming'. Addison-Wesley. ISBN 0-13-142901-9.

[bibliography]
.论文
- [[[abc2003]]] Gall Anonim. 'An article', Whatever. 2003.
............................
============================

<1> 每个区域以[bibliography]开头，并使用块标题来指定区域的题目。关于块标题，请参考<<block_title>>。
<2> 引用条目的格式相对于BibTex或Docbook来说要简单很多，AsciiDoc的条目直接用列表表示。通常会给前面加个id，方便在正文内部进行引用。


索引表目的撰写则最为简单：

.索引表目代码
============================
............................

[index]
索引标题 <1>
--------

............................
============================

<1> 只需给定标题即可，其他什么都不用写，系统会自动生成索引的条目。

